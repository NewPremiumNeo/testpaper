<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>
        <%= test.title %>
    </title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #CFD8DB;
            font-family: 'Arial', sans-serif;
        }

        .test-container {
            background: #ffffff;
            border-radius: 8px;
            padding: 30px;
            margin-top: 30px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            width: 30rem;
        }

        .test-title {
            font-size: 2rem;
            color: #343a40;
            margin-bottom: 20px;
        }

        .question-container {
            /* display: flex;
            align-items: center;
            flex-direction: column; */
            background: #ffffff;
            border: 1px solid #ddd;
            border-radius: 5px;
            padding: 20px;
            margin-bottom: 20px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
        }

        .question-text {
            margin-bottom: 1rem;
            font-size: 1.25rem;
            font-weight: 500;
            color: #495057;
        }

        .timer {
            font-size: 1.5rem;
            font-weight: bold;
            color: #dc3545;
            margin-bottom: 20px;
        }

        .form-check-label {
            font-size: 1rem;
            color: #495057;
        }

        .submit-btn {
            background-color: #007bff;
            color: #ffffff;
            border-radius: 25px;
            font-size: 1.25rem;
        }

        .submit-btn:hover {
            background-color: #0056b3;
        }

        .form-check-input:checked {
            background-color: #007bff;
            border-color: #007bff;
        }

        .option {
            border-radius: 290486px;
            padding: 9px 18px;
            margin-bottom: 12px;
            transition: 0.3s;
            cursor: pointer;
            background-color: rgba(0, 0, 0, 0.05);
            color: rgba(0, 0, 0, 0.85);
            border: transparent 1px solid;
            overflow: hidden;
        }

        .option:hover {
            background-color: rgba(0, 0, 0, 0.1);
        }

        .option:active {
            transform: scale(0.9);
        }

        .option.is-selected {
            border-color: rgba(0, 0, 0, 0.25);
            background-color: white;
        }
    </style>
</head>

<body>
    <div class="container test-container">
        <h2 class="text-center test-title">
            <%= test.title %>
        </h2>
        <div class="progress mb-3">
            <div id="progress-bar" class="progress-bar" role="progressbar" style="width: 0%;" aria-valuenow="0"
                aria-valuemin="0" aria-valuemax="100"></div>
        </div>
        <p class="text-center" id="attempted-count">Attempted: 0 / <%= test.questions.length %>
        </p>
        <p class="text-center timer" id="timer"></p>
        <form id="test-form" action="/test/submit" method="POST">
            <input type="hidden" name="testId" value="<%= test._id %>">
            <% test.questions.forEach((question, index)=> { %>
                <div class="question-container">
                    <h5 class="question-text">
                        <%= index + 1 %>. <%= question.questionText %> (<%= question.type %>)
                    </h5>
                    <% question.options.forEach((option, optIndex)=> { %>
                        <div class="option" onclick="toggleInput('q<%= question._id %>o<%= optIndex %>')">
                            <div class="form-check">
                                <% if (question.type==='MCQ' ) { %>
                                    <input class="form-check-input" type="radio" name="answers[<%= question._id %>]"
                                        value="<%= option %>" id="q<%= question._id %>o<%= optIndex %>">

                                    <% } else { %>
                                        <input class="form-check-input" type="checkbox"
                                            name="answers[<%= question._id %>]" value="<%= option %>"
                                            id="q<%= question._id %>o<%= optIndex %>">
                                        <% } %>
                                            <label class="form-check-label" for="q<%= question._id %>o<%= optIndex %>">
                                                <%= option %>
                                            </label>
                            </div>
                        </div>
                        <% }) %>
                </div>
                <% }) %>
                    <div class="d-grid">
                        <button type="submit" class="btn submit-btn">Submit Test</button>
                    </div>
        </form>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="/javascripts/test.js"></script>
    <script>
        const timeLimit = <%= test.timeLimit %> * 60; // Convert minutes to seconds
        let timeLeft = timeLimit;
        const totalQuestions = <%= test.questions.length %>;
        let attemptedQuestions = new Set(); // Use a Set to track attempted questions

        function formatTime(seconds) {
            const minutes = Math.floor(seconds / 60);
            const secs = seconds % 60;
            return `${minutes}:${secs < 10 ? '0' : ''}${secs}`;
        }

        function startTimer() {
            const timerElement = document.getElementById('timer');
            const interval = setInterval(() => {
                timeLeft--;
                localStorage.setItem('timeLeft', timeLeft); // Store the remaining time
                timerElement.textContent = formatTime(timeLeft);

                updateProgressBar();

                if (timeLeft <= 0) {
                    clearInterval(interval);
                    document.getElementById('test-form').submit();
                }
            }, 1000);
        }

        function updateProgressBar() {
            const progressBar = document.getElementById('progress-bar');
            const attemptedText = document.getElementById('attempted-count');
            const percent = (attemptedQuestions.size / totalQuestions) * 100;

            progressBar.style.width = `${percent}%`;
            progressBar.setAttribute('aria-valuenow', attemptedQuestions.size);
            attemptedText.textContent = `Attempted: ${attemptedQuestions.size} / ${totalQuestions}`;
        }

        // Check for saved time in local storage when the page loads
        document.addEventListener('DOMContentLoaded', () => {
            const savedTimeLeft = localStorage.getItem('timeLeft');
            if (savedTimeLeft !== null) {
                timeLeft = parseInt(savedTimeLeft, 10);
                localStorage.removeItem('timeLeft'); // Clear the stored time after using it
            }
            document.getElementById('timer').textContent = formatTime(timeLeft);
            startTimer();

            // Track the selected answers and update the progress
            const inputs = document.querySelectorAll('.form-check-input');
            inputs.forEach(input => {
                input.addEventListener('change', () => {
                    const questionId = input.name; // Get the question ID from the input name
                    const questionAttempted = attemptedQuestions.has(questionId);

                    // Check if the current question was not previously attempted
                    if (input.checked && !questionAttempted) {
                        attemptedQuestions.add(questionId); // Add to the Set if checked
                    } else if (!input.checked && questionAttempted) {
                        // If it's a checkbox question, check if all options are unchecked
                        const questionInputs = document.querySelectorAll(`input[name="${questionId}"]`);
                        const allUnchecked = Array.from(questionInputs).every(qInput => !qInput.checked);

                        if (allUnchecked) {
                            attemptedQuestions.delete(questionId); // Remove from the Set if all are unchecked
                        }
                    }
                    updateProgressBar();
                });
            });
        });


    </script>
</body>

</html>